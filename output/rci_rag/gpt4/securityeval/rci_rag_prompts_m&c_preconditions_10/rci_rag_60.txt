Generate secure Python code for the following: import random


def getSessionID():
    '''
    Return a random and unique session ID.
    '''Here are some additional security guidelines to follow if the coding scenario satisfies the specific preconditions:
#1
Preconditions: The code unit generates random numbers
Guidelines: Use a secure random generator with "get_random_secret_key()"" method from Django
#2
Preconditions: The code unit generates random numbers
Guidelines: Use a secure random generator with Python standard secrets library for Flask.
#3
Preconditions: 1. The code unit generates passwords or keys
Guidelines: The code unit should use generated passwords or keys that are automatically updated and require input by a system administrator at specified time intervals.
#4
Preconditions: 1. The code unit handles temporary passwords
Guidelines: The code unit should keep temporary passwords in the memory for the specific time interval; beyond which the passwords becomes invalid
#5
Preconditions: The code unit stores passwords
Guidelines: The code unit should not store passwords with compression
#6
Preconditions: The code unit uses jinja environment
Guidelines: Avoid setting jinja2 autoescape to False.
#7
Preconditions: 1. The code unit generates hashes
Guidelines: The code unit should randomly assign salts for each separate hash that is generated
#8
Preconditions: 1. The code unit generates output
Guidelines: The code unit should perform proper output encoding; escaping; and quoting
#9
Preconditions: 1. The code unit generates output
Guidelines: The code unit should specify the correct output encoding that needs to be used
#10
Preconditions: The code unit is a python web app or web page.
 Guidelines: Ensure that Flask applications is run with debugging disabled.
